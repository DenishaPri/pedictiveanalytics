# -*- coding: utf-8 -*-
"""LVADSUSR81_DENISHAPRIYAG_LAB4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vrO5ZYdWJv5dykzRTWlUS49QbTFrB-vB
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.ensemble import IsolationForest
import warnings
warnings.filterwarnings('ignore')
from sklearn import preprocessing
social_data = pd.read_csv("/content/drive/MyDrive/social_network.csv")
# social_data
social_data.info()

social_data.columns.tolist()

social_data.describe()

#------------encoder------------------
label_encoder = preprocessing.LabelEncoder()

social_data['account_status'] = label_encoder.fit_transform(social_data['account_status'])

#------------Feature selection---------------
social_features = social_data[['user_id','account_status','social_connections','suspicious_activity']]

model = IsolationForest(n_estimators=100, contamination=0.1)
model.fit(social_features)

y_pred = model.predict(social_features)

social_data["anomaly_score"] = model.decision_function(social_features)
social_data

anomalies = social_data.loc[social_data["anomaly_score"] < 0]
anomalies

social_data_test = pd.read_csv("/content/drive/MyDrive/social_network.csv")
social_data_test

social_data_test['account_status']= label_encoder.fit_transform(social_data_test['account_status'])
x=social_data_test[['user_id','account_status','social_connections','suspicious_activity']]
social_data_test_values=x.values

find=social_data_test_values
result=[]
for i in find:
  z=model.predict([i])
  if z==[1]:
    result.append('NO')
  elif z==[-1]:
    result.append('YES')

social_data_test['Anomaly']=result
social_data_test.head(10)

plt.scatter(social_data["account_status"], social_data["anomaly_score"], label="Normal")
plt.scatter(anomalies["account_status"], anomalies["anomaly_score"], color="green", label="Anomaly")
plt.xlabel("account_status")
plt.ylabel("anomaly_score")
plt.legend()
plt.show()